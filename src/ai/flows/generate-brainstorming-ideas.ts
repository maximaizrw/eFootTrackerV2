'use server';

/**
 * @fileOverview This file defines a Genkit flow for generating brainstorming ideas and sub-tasks based on a user-provided prompt.
 *
 * - generateBrainstormingIdeas - A function that takes a prompt and generates related ideas and sub-tasks.
 * - GenerateBrainstormingIdeasInput - The input type for the generateBrainstormingIdeas function.
 * - GenerateBrainstormingIdeasOutput - The return type for the generateBrainstormingIdeas function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateBrainstormingIdeasInputSchema = z.object({
  prompt: z.string().describe('The initial idea, goal, or problem provided by the user.'),
});
export type GenerateBrainstormingIdeasInput = z.infer<typeof GenerateBrainstormingIdeasInputSchema>;

const GenerateBrainstormingIdeasOutputSchema = z.object({
  ideas: z
    .array(z.string())
    .describe('A list of related ideas and sub-tasks generated by the AI.'),
});
export type GenerateBrainstormingIdeasOutput = z.infer<typeof GenerateBrainstormingIdeasOutputSchema>;

export async function generateBrainstormingIdeas(
  input: GenerateBrainstormingIdeasInput
): Promise<GenerateBrainstormingIdeasOutput> {
  return generateBrainstormingIdeasFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateBrainstormingIdeasPrompt',
  input: {schema: GenerateBrainstormingIdeasInputSchema},
  output: {schema: GenerateBrainstormingIdeasOutputSchema},
  prompt: `You are a brainstorming assistant. Generate a list of related ideas and sub-tasks based on the following prompt:\n\nPrompt: {{{prompt}}}\n\nIdeas and sub-tasks:`,
});

const generateBrainstormingIdeasFlow = ai.defineFlow(
  {
    name: 'generateBrainstormingIdeasFlow',
    inputSchema: GenerateBrainstormingIdeasInputSchema,
    outputSchema: GenerateBrainstormingIdeasOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
